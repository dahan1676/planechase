{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nexport function getSession() {\n  // const [session, setSession] = useState(null);\n}\nexport function createSessionRequest() {\n  //   curl --location 'https://us-east-1.aws.data.mongodb-api.com/app/data-napyt/endpoint/data/v1/action/findOne' \\\n  // --header 'Content-Type: application/json' \\\n  // --header 'Access-Control-Request-Headers: *' \\\n  // --header 'api-key: kqhoHk09XphZcWMeBlGUOgDSXwvQDDkkn5mRXreTwyV6afivwZYiTnit6JSt7JyO' \\\n  // --header 'Accept: application/json' \\\n  // --data '{\n  //       \"dataSource\": \"dhuber-cluster-0\",\n  //       \"database\": \"planechase\",\n  //       \"collection\": \"sessions\",\n  //       \"filter\": { \"_id\": \"ABCD\"  }\n  //   }'\n\n  console.log('setting up mongoDb');\n  const sessionData = null;\n  const dataSource = 'dhuber-cluster-0';\n  const database = 'planechase';\n  const sessionCollection = 'sessions';\n  const headers = new Headers();\n  headers.append('Content-Type', 'application/json');\n  headers.append('Accept', 'application/json');\n  headers.append('Access-Control-Request-Headers', '*');\n  headers.append('Access-Control-Allow-Origin', '*');\n  headers.append('api-key', 'kqhoHk09XphZcWMeBlGUOgDSXwvQDDkkn5mRXreTwyV6afivwZYiTnit6JSt7JyO');\n  const body = JSON.stringify({\n    'dataSource': dataSource,\n    'database': database,\n    'collection': sessionCollection,\n    'filter': {\n      '_id': 'ABCD'\n    }\n  });\n  const requestOptions = {\n    method: 'POST',\n    headers: headers,\n    body: body,\n    mode: 'no-cors'\n  };\n  fetch('https://us-east-1.aws.data.mongodb-api.com/app/data-napyt/endpoint/data/v1/action/findOne', requestOptions).then(response => response.json()).then(data => sessionData = data).catch(error => console.error(error));\n  console.log('session: ' + sessionData);\n  return sessionData;\n}","map":{"version":3,"names":["React","useState","useEffect","getSession","createSessionRequest","console","log","sessionData","dataSource","database","sessionCollection","headers","Headers","append","body","JSON","stringify","requestOptions","method","mode","fetch","then","response","json","data","catch","error"],"sources":["/Users/danhuber/Desktop/development/planechase-new/planechase/src/mongoApi.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\n\nexport function getSession() {\n  // const [session, setSession] = useState(null);\n}\n\nexport function createSessionRequest() {\n//   curl --location 'https://us-east-1.aws.data.mongodb-api.com/app/data-napyt/endpoint/data/v1/action/findOne' \\\n// --header 'Content-Type: application/json' \\\n// --header 'Access-Control-Request-Headers: *' \\\n// --header 'api-key: kqhoHk09XphZcWMeBlGUOgDSXwvQDDkkn5mRXreTwyV6afivwZYiTnit6JSt7JyO' \\\n// --header 'Accept: application/json' \\\n// --data '{\n//       \"dataSource\": \"dhuber-cluster-0\",\n//       \"database\": \"planechase\",\n//       \"collection\": \"sessions\",\n//       \"filter\": { \"_id\": \"ABCD\"  }\n//   }'\n\n  console.log('setting up mongoDb');\n  const sessionData = null;\n  const dataSource = 'dhuber-cluster-0';\n  const database = 'planechase';\n  const sessionCollection = 'sessions';\n\n  const headers = new Headers();\n  headers.append('Content-Type', 'application/json');\n  headers.append('Accept', 'application/json');\n  headers.append('Access-Control-Request-Headers', '*');\n  headers.append('Access-Control-Allow-Origin', '*');\n  headers.append('api-key', 'kqhoHk09XphZcWMeBlGUOgDSXwvQDDkkn5mRXreTwyV6afivwZYiTnit6JSt7JyO');\n\n  const body = JSON.stringify({\n    'dataSource': dataSource,\n    'database': database,\n    'collection': sessionCollection,\n    'filter': { '_id': 'ABCD' }\n  });\n\n  const requestOptions = {\n    method: 'POST',\n    headers: headers,\n    body: body,\n    mode: 'no-cors'\n  }\n\n  fetch('https://us-east-1.aws.data.mongodb-api.com/app/data-napyt/endpoint/data/v1/action/findOne', requestOptions)\n    .then(response => response.json())\n    .then(data => sessionData = data)\n    .catch(error => console.error(error));\n  console.log('session: ' + sessionData);\n\n  return sessionData;\n}"],"mappings":"AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAEhD,OAAO,SAASC,UAAUA,CAAA,EAAG;EAC3B;AAAA;AAGF,OAAO,SAASC,oBAAoBA,CAAA,EAAG;EACvC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEEC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EACjC,MAAMC,WAAW,GAAG,IAAI;EACxB,MAAMC,UAAU,GAAG,kBAAkB;EACrC,MAAMC,QAAQ,GAAG,YAAY;EAC7B,MAAMC,iBAAiB,GAAG,UAAU;EAEpC,MAAMC,OAAO,GAAG,IAAIC,OAAO,CAAC,CAAC;EAC7BD,OAAO,CAACE,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC;EAClDF,OAAO,CAACE,MAAM,CAAC,QAAQ,EAAE,kBAAkB,CAAC;EAC5CF,OAAO,CAACE,MAAM,CAAC,gCAAgC,EAAE,GAAG,CAAC;EACrDF,OAAO,CAACE,MAAM,CAAC,6BAA6B,EAAE,GAAG,CAAC;EAClDF,OAAO,CAACE,MAAM,CAAC,SAAS,EAAE,kEAAkE,CAAC;EAE7F,MAAMC,IAAI,GAAGC,IAAI,CAACC,SAAS,CAAC;IAC1B,YAAY,EAAER,UAAU;IACxB,UAAU,EAAEC,QAAQ;IACpB,YAAY,EAAEC,iBAAiB;IAC/B,QAAQ,EAAE;MAAE,KAAK,EAAE;IAAO;EAC5B,CAAC,CAAC;EAEF,MAAMO,cAAc,GAAG;IACrBC,MAAM,EAAE,MAAM;IACdP,OAAO,EAAEA,OAAO;IAChBG,IAAI,EAAEA,IAAI;IACVK,IAAI,EAAE;EACR,CAAC;EAEDC,KAAK,CAAC,2FAA2F,EAAEH,cAAc,CAAC,CAC/GI,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIjB,WAAW,GAAGiB,IAAI,CAAC,CAChCC,KAAK,CAACC,KAAK,IAAIrB,OAAO,CAACqB,KAAK,CAACA,KAAK,CAAC,CAAC;EACvCrB,OAAO,CAACC,GAAG,CAAC,WAAW,GAAGC,WAAW,CAAC;EAEtC,OAAOA,WAAW;AACpB"},"metadata":{},"sourceType":"module","externalDependencies":[]}