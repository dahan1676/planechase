{"ast":null,"code":"var _jsxFileName = \"/Users/danhuber/Desktop/development/planechase-new/planechase/src/controls/Controls.js\",\n  _s = $RefreshSig$();\nimport React, { Component, useState } from 'react';\nimport Planeswalk from '../img/symbols/PW.png';\nimport Chaos from '../img/symbols/CHAOS.png';\nimport Blank from '../img/symbols/BLANK.png';\nimport Whitespace from '../img/symbols/WHITESPACE.png';\nimport './Controls.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Controls() {\n  _s();\n  function handleRoll() {\n    console.log('handleRoll');\n    const randomIdx = Math.floor(Math.random() * options.length);\n    const newResult = options[randomIdx];\n    const newCount = count + 1;\n    setCurrentResult(newResult);\n    setCount(newCount);\n  }\n  function handleReset() {\n    console.log('handleReset');\n    setCount(0);\n  }\n  const options = [{\n    name: 'Blank',\n    image: Blank\n  }, {\n    name: 'Blank',\n    image: Blank\n  }, {\n    name: 'Blank',\n    image: Blank\n  }, {\n    name: 'Blank',\n    image: Blank\n  }, {\n    name: 'Planeswalk',\n    image: Planeswalk\n  }, {\n    name: 'Chaos',\n    image: Chaos\n  }];\n  const [currentResult, setCurrentResult] = useState(options[0]);\n  const [count, setCount] = useState(0);\n\n  // this.handleRoll = this.handleRoll.bind(this);\n  // this.handleReset = this.handleReset.bind(this);\n\n  console.log('rendering buttons');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Controls\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Button Roll\",\n        onClick: handleRoll,\n        children: \"Roll\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Button Reset\",\n        onClick: handleReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Display\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentResult.image,\n        className: \"result-img\",\n        alt: Whitespace\n      }, Date.now(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Result: \", currentResult.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"# Rolls this turn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Your next roll costs this much mana\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(Controls, \"gUyT7AwzRy+8C7jCUrW7ym4mqD0=\");\n_c = Controls;\nvar _c;\n$RefreshReg$(_c, \"Controls\");","map":{"version":3,"names":["React","Component","useState","Planeswalk","Chaos","Blank","Whitespace","jsxDEV","_jsxDEV","Controls","_s","handleRoll","console","log","randomIdx","Math","floor","random","options","length","newResult","newCount","count","setCurrentResult","setCount","handleReset","name","image","currentResult","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","Date","now","_c","$RefreshReg$"],"sources":["/Users/danhuber/Desktop/development/planechase-new/planechase/src/controls/Controls.js"],"sourcesContent":["import React, {Component, useState} from 'react'\nimport Planeswalk from '../img/symbols/PW.png'\nimport Chaos from '../img/symbols/CHAOS.png'\nimport Blank from '../img/symbols/BLANK.png'\nimport Whitespace from '../img/symbols/WHITESPACE.png'\nimport './Controls.css'\n\nexport default function Controls() {\n  function handleRoll() {\n    console.log('handleRoll');\n    const randomIdx = Math.floor(Math.random() * options.length);\n    const newResult = options[randomIdx];\n    const newCount = count + 1;\n\n    setCurrentResult(newResult);\n    setCount(newCount);\n  }\n\n  function handleReset() {\n    console.log('handleReset');\n    setCount(0);\n  }\n\n  const options = [\n    {\n      name: 'Blank',\n      image: Blank\n    }, {\n      name: 'Blank',\n      image: Blank\n    }, {\n      name: 'Blank',\n      image: Blank\n    }, {\n      name: 'Blank',\n      image: Blank\n    }, {\n      name: 'Planeswalk',\n      image: Planeswalk\n    }, {\n      name: 'Chaos',\n      image: Chaos\n    }\n  ];\n\n  const [currentResult, setCurrentResult] = useState(options[0]);\n  const [count, setCount] = useState(0);\n\n  // this.handleRoll = this.handleRoll.bind(this);\n  // this.handleReset = this.handleReset.bind(this);\n\n  console.log('rendering buttons');\n  return (\n    <div className=\"Controls\">\n      <div className=\"Buttons\">\n        <button className=\"Button Roll\" onClick={handleRoll}>Roll</button>\n        <button className=\"Button Reset\" onClick={handleReset}>Reset</button>\n      </div>\n      <div className=\"Display\">\n        <img key={Date.now()}\n            src={currentResult.image}\n            className=\"result-img\"\n            alt={Whitespace}\n        />\n        <p>\n          <h4>Result: {currentResult.name}</h4>\n        </p>\n        <p>\n          <h4># Rolls this turn</h4>\n          <h4>Your next roll costs this much mana</h4>\n          <h4>{count}</h4>\n        </p>\n      </div>\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}