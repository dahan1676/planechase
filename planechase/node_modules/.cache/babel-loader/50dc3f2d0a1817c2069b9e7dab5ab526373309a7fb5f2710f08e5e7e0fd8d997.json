{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getAllPlanes, makeNewSession } from \"../tools/mongoApi.js\";\nimport { getMappedPlaneList, getDieResultFromName } from '../tools/utils.js';\nimport { planeImages } from '../tools/consts.js';\nexport default function NewSession() {\n  _s();\n  // Make plane deck\n  // Make session\n  // route to planechase component with session id\n\n  function shuffleDeck(deck) {\n    for (var i = deck.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = deck[i];\n      deck[i] = deck[j];\n      deck[j] = temp;\n    }\n    return deck;\n  }\n  function makeShuffledPlanarDeck(planeList) {\n    // const planeImages = importAll(\n    //   require.context('../img/planes', true, /\\.(png|jpe?g|svg)$/),\n    //   'mtg'\n    // );\n\n    const mappedPlaneList = getMappedPlaneList(planeList, planeImages);\n    const shuffledDeck = shuffleDeck(mappedPlaneList);\n    return shuffledDeck;\n  }\n  useEffect(() => {\n    getAllPlanes().then(planeList => {\n      console.log('planeList: ' + planeList.length);\n      const shuffledPlanarDeck = makeShuffledPlanarDeck(planeList);\n      const firstPlane = shuffledPlanarDeck.pop();\n      makeNewSession(firstPlane, shuffledPlanarDeck, planeImages).then(session => {\n        setSession(session);\n        console.log(session);\n      });\n    });\n  }, []);\n  const [session, setSession] = useState(null);\n  const navigate = useNavigate();\n  if (session) {\n    navigate(`/${session.code}`, {\n      state: session\n    });\n  }\n  // return (\n  //   <div>\n  //     <div className='container'>\n  //       <Link to='/49'>new session</Link>\n  //     </div>\n  //     <Outlet />\n  //   </div>\n  // );\n}\n_s(NewSession, \"V48p7J/5iJHBj/toRmd3ZB6sTIQ=\", false, function () {\n  return [useNavigate];\n});\n_c = NewSession;\nvar _c;\n$RefreshReg$(_c, \"NewSession\");","map":{"version":3,"names":["useState","useEffect","useNavigate","getAllPlanes","makeNewSession","getMappedPlaneList","getDieResultFromName","planeImages","NewSession","_s","shuffleDeck","deck","i","length","j","Math","floor","random","temp","makeShuffledPlanarDeck","planeList","mappedPlaneList","shuffledDeck","then","console","log","shuffledPlanarDeck","firstPlane","pop","session","setSession","navigate","code","state","_c","$RefreshReg$"],"sources":["/Users/danhuber/Desktop/development/planechase-new/planechase/src/planechase/NewSession.js"],"sourcesContent":["import {useState, useEffect} from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getAllPlanes, makeNewSession } from \"../tools/mongoApi.js\";\nimport { getMappedPlaneList, getDieResultFromName } from '../tools/utils.js';\nimport { planeImages } from '../tools/consts.js';\n\nexport default function NewSession() {\n\n  // Make plane deck\n  // Make session\n  // route to planechase component with session id\n\n  function shuffleDeck(deck) {\n    for (var i = deck.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = deck[i];\n      deck[i] = deck[j];\n      deck[j] = temp; \n    }\n\n    return deck;\n  }\n\n  function makeShuffledPlanarDeck(planeList) {\n    // const planeImages = importAll(\n    //   require.context('../img/planes', true, /\\.(png|jpe?g|svg)$/),\n    //   'mtg'\n    // );\n\n    const mappedPlaneList = getMappedPlaneList(planeList, planeImages);\n    const shuffledDeck = shuffleDeck(mappedPlaneList);\n    return shuffledDeck\n  }\n\n  useEffect(() => {\n    getAllPlanes().then(planeList => {\n      console.log('planeList: ' + planeList.length);\n      const shuffledPlanarDeck = makeShuffledPlanarDeck(planeList);\n      const firstPlane = shuffledPlanarDeck.pop();\n      \n      makeNewSession(firstPlane, shuffledPlanarDeck, planeImages).then(session => {\n        setSession(session);\n        console.log(session);\n      });\n    });\n  }, []);\n\n  const [session, setSession] = useState(null);\n  const navigate = useNavigate();\n  if (session) {\n    navigate(`/${session.code}`, { state: session });\n  }\n  // return (\n  //   <div>\n  //     <div className='container'>\n  //       <Link to='/49'>new session</Link>\n  //     </div>\n  //     <Outlet />\n  //   </div>\n  // );\n}"],"mappings":";AAAA,SAAQA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACzC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,YAAY,EAAEC,cAAc,QAAQ,sBAAsB;AACnE,SAASC,kBAAkB,EAAEC,oBAAoB,QAAQ,mBAAmB;AAC5E,SAASC,WAAW,QAAQ,oBAAoB;AAEhD,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAEnC;EACA;EACA;;EAEA,SAASC,WAAWA,CAACC,IAAI,EAAE;IACzB,KAAK,IAAIC,CAAC,GAAGD,IAAI,CAACE,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MACxC,IAAIE,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIL,CAAC,GAAG,CAAC,CAAC,CAAC;MAC3C,IAAIM,IAAI,GAAGP,IAAI,CAACC,CAAC,CAAC;MAClBD,IAAI,CAACC,CAAC,CAAC,GAAGD,IAAI,CAACG,CAAC,CAAC;MACjBH,IAAI,CAACG,CAAC,CAAC,GAAGI,IAAI;IAChB;IAEA,OAAOP,IAAI;EACb;EAEA,SAASQ,sBAAsBA,CAACC,SAAS,EAAE;IACzC;IACA;IACA;IACA;;IAEA,MAAMC,eAAe,GAAGhB,kBAAkB,CAACe,SAAS,EAAEb,WAAW,CAAC;IAClE,MAAMe,YAAY,GAAGZ,WAAW,CAACW,eAAe,CAAC;IACjD,OAAOC,YAAY;EACrB;EAEArB,SAAS,CAAC,MAAM;IACdE,YAAY,CAAC,CAAC,CAACoB,IAAI,CAACH,SAAS,IAAI;MAC/BI,OAAO,CAACC,GAAG,CAAC,aAAa,GAAGL,SAAS,CAACP,MAAM,CAAC;MAC7C,MAAMa,kBAAkB,GAAGP,sBAAsB,CAACC,SAAS,CAAC;MAC5D,MAAMO,UAAU,GAAGD,kBAAkB,CAACE,GAAG,CAAC,CAAC;MAE3CxB,cAAc,CAACuB,UAAU,EAAED,kBAAkB,EAAEnB,WAAW,CAAC,CAACgB,IAAI,CAACM,OAAO,IAAI;QAC1EC,UAAU,CAACD,OAAO,CAAC;QACnBL,OAAO,CAACC,GAAG,CAACI,OAAO,CAAC;MACtB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM,CAACA,OAAO,EAAEC,UAAU,CAAC,GAAG9B,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM+B,QAAQ,GAAG7B,WAAW,CAAC,CAAC;EAC9B,IAAI2B,OAAO,EAAE;IACXE,QAAQ,CAAE,IAAGF,OAAO,CAACG,IAAK,EAAC,EAAE;MAAEC,KAAK,EAAEJ;IAAQ,CAAC,CAAC;EAClD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF;AAACpB,EAAA,CAtDuBD,UAAU;EAAA,QA0CfN,WAAW;AAAA;AAAAgC,EAAA,GA1CN1B,UAAU;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}