{"ast":null,"code":"import { dieOptions } from \"./consts\";\nfunction shuffleDeck(deck) {\n  for (var i = deck.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var temp = deck[i];\n    deck[i] = deck[j];\n    deck[j] = temp;\n  }\n  return deck;\n}\nexport function makeFullPlaneUrl(planeUrl) {\n  return planeUrl.indexOf('who') === 0 ? `./who/${planeUrl}` : `./mtg/${planeUrl}`;\n}\nexport function getMappedPlaneList(planeList, imageMap) {\n  return planeList.map(plane => {\n    return getMappedPlane(plane, imageMap);\n  });\n}\nexport function getMappedPlane(plane, imageMap) {\n  if (plane && plane.url) {\n    const urlKey = makeFullPlaneUrl(plane.url);\n    plane.url = imageMap[urlKey];\n    return plane;\n  }\n  return plane;\n}\nexport function getDieResultFromName(dieResultName) {\n  return dieOptions.find(option => {\n    return option.name === dieResultName;\n  });\n}\nexport function importAll(r, set) {\n  let images = {};\n  r.keys().forEach((item, index) => {\n    images[item.replace(`../img/webcam-friendly/planes/${set}`, '')] = r(item);\n  });\n  return images;\n}","map":{"version":3,"names":["dieOptions","shuffleDeck","deck","i","length","j","Math","floor","random","temp","makeFullPlaneUrl","planeUrl","indexOf","getMappedPlaneList","planeList","imageMap","map","plane","getMappedPlane","url","urlKey","getDieResultFromName","dieResultName","find","option","name","importAll","r","set","images","keys","forEach","item","index","replace"],"sources":["/Users/danhuber/Desktop/development/planechase-new/planechase/src/tools/utils.js"],"sourcesContent":["import { dieOptions } from \"./consts\";\n\nfunction shuffleDeck(deck) {\n  for (var i = deck.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var temp = deck[i];\n    deck[i] = deck[j];\n    deck[j] = temp; \n  }\n\n  return deck;\n}\n\nexport function makeFullPlaneUrl(planeUrl) {\n  return planeUrl.indexOf('who') === 0 ? `./who/${planeUrl}` : `./mtg/${planeUrl}`;\n}\n\nexport function getMappedPlaneList(planeList, imageMap) {\n  return planeList.map(plane => {\n    return getMappedPlane(plane, imageMap);\n  });\n}\n\nexport function getMappedPlane(plane, imageMap) {\n  if (plane && plane.url) {\n    const urlKey = makeFullPlaneUrl(plane.url);\n    plane.url = imageMap[urlKey];\n    return plane;\n  }\n  return plane;\n}\n\nexport function getDieResultFromName(dieResultName) {\n  return dieOptions.find(option => {\n    return option.name === dieResultName;\n  });\n}\n\nexport function importAll(r, set) {\n  let images = {};\n  r.keys().forEach((item, index) => {\n    images[item.replace(`../img/webcam-friendly/planes/${set}`, '')] = r(item);\n  });\n  return images;\n}"],"mappings":"AAAA,SAASA,UAAU,QAAQ,UAAU;AAErC,SAASC,WAAWA,CAACC,IAAI,EAAE;EACzB,KAAK,IAAIC,CAAC,GAAGD,IAAI,CAACE,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IACxC,IAAIE,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIL,CAAC,GAAG,CAAC,CAAC,CAAC;IAC3C,IAAIM,IAAI,GAAGP,IAAI,CAACC,CAAC,CAAC;IAClBD,IAAI,CAACC,CAAC,CAAC,GAAGD,IAAI,CAACG,CAAC,CAAC;IACjBH,IAAI,CAACG,CAAC,CAAC,GAAGI,IAAI;EAChB;EAEA,OAAOP,IAAI;AACb;AAEA,OAAO,SAASQ,gBAAgBA,CAACC,QAAQ,EAAE;EACzC,OAAOA,QAAQ,CAACC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,GAAI,SAAQD,QAAS,EAAC,GAAI,SAAQA,QAAS,EAAC;AAClF;AAEA,OAAO,SAASE,kBAAkBA,CAACC,SAAS,EAAEC,QAAQ,EAAE;EACtD,OAAOD,SAAS,CAACE,GAAG,CAACC,KAAK,IAAI;IAC5B,OAAOC,cAAc,CAACD,KAAK,EAAEF,QAAQ,CAAC;EACxC,CAAC,CAAC;AACJ;AAEA,OAAO,SAASG,cAAcA,CAACD,KAAK,EAAEF,QAAQ,EAAE;EAC9C,IAAIE,KAAK,IAAIA,KAAK,CAACE,GAAG,EAAE;IACtB,MAAMC,MAAM,GAAGV,gBAAgB,CAACO,KAAK,CAACE,GAAG,CAAC;IAC1CF,KAAK,CAACE,GAAG,GAAGJ,QAAQ,CAACK,MAAM,CAAC;IAC5B,OAAOH,KAAK;EACd;EACA,OAAOA,KAAK;AACd;AAEA,OAAO,SAASI,oBAAoBA,CAACC,aAAa,EAAE;EAClD,OAAOtB,UAAU,CAACuB,IAAI,CAACC,MAAM,IAAI;IAC/B,OAAOA,MAAM,CAACC,IAAI,KAAKH,aAAa;EACtC,CAAC,CAAC;AACJ;AAEA,OAAO,SAASI,SAASA,CAACC,CAAC,EAAEC,GAAG,EAAE;EAChC,IAAIC,MAAM,GAAG,CAAC,CAAC;EACfF,CAAC,CAACG,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;IAChCJ,MAAM,CAACG,IAAI,CAACE,OAAO,CAAE,iCAAgCN,GAAI,EAAC,EAAE,EAAE,CAAC,CAAC,GAAGD,CAAC,CAACK,IAAI,CAAC;EAC5E,CAAC,CAAC;EACF,OAAOH,MAAM;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}