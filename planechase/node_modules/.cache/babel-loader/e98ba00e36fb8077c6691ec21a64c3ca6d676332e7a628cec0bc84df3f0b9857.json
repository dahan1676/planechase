{"ast":null,"code":"var _jsxFileName = \"/Users/danhuber/Desktop/development/planechase-new/planechase/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport CardDisplay from \"./card-display/CardDisplay.js\";\nimport Controls from \"./controls/Controls.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction cardDisplayFunctions() {\n  function importAll(r, set) {\n    let images = {};\n    r.keys().forEach((item, index) => {\n      images[item.replace(`./img/planes/${set}`, \"\")] = r(item);\n    });\n    return images;\n  }\n}\nexport default function Planechase() {\n  _s();\n  function shuffleDeck(deck) {\n    console.log(\"shuffleDeck\");\n    for (var i = deck.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = deck[i];\n      deck[i] = deck[j];\n      deck[j] = temp;\n    }\n  }\n  function handleCardClick() {\n    console.log(\"handleClick\");\n    const discardPile = shownCards;\n    const tempShuffledCardList = shuffledCardList;\n    discardPile.push(tempShuffledCardList.pop());\n    setShownCards(discardPile);\n    setActiveCard(shownCards[shownCards.length - 1]);\n  }\n  function makeDecks() {\n    console.log(\"making decks\");\n    const mtgImages = this.cardDisplayFunctions.importAll(require.context(\"./img/planes/mtg\", false, /\\.(png|jpe?g|svg)$/), \"mtg\");\n    const whoImages = this.cardDisplayFunctions.importAll(require.context(\"./img/planes/who\", false, /\\.(png|jpe?g|svg)$/), \"who\");\n    const cardImages = [];\n    const tempDeck = cardImages;\n    const shownCards = [];\n    if (sets.indexOf(\"mtg\") > -1) {\n      Object.keys(mtgImages).forEach(key => {\n        cardImages.push(mtgImages[key]);\n      });\n    }\n    if (sets.indexOf(\"who\") > -1) {\n      Object.keys(whoImages).forEach(key => {\n        cardImages.push(whoImages[key]);\n      });\n    }\n    shuffleDeck(tempDeck);\n    shownCards.push(tempDeck.pop());\n    return {\n      cardList: cardImages,\n      shuffledCardList: tempDeck,\n      shownCards: shownCards\n    };\n  }\n  console.log(\"rendering card\");\n  const [sets, setSets] = useState([\"mtg\", \"who\"]);\n  const stateVars = makeDecks();\n  const [cardList, setCardList] = useState(stateVars.cardList);\n  const [shuffledCardList, setShuffledCardList] = useState(stateVars.shuffledCardList);\n  const [shownCards, setShownCards] = useState(stateVars.shownCards);\n  const [activeCard, setActiveCard] = useState(shownCards[shownCards.length - 1]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display\",\n      children: /*#__PURE__*/_jsxDEV(CardDisplay, {\n        activeCard: activeCard,\n        handleClick: handleCardClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n_s(Planechase, \"29u6GM06wP6il9OW7IfqSOxzu3k=\");\n_c = Planechase;\nvar _c;\n$RefreshReg$(_c, \"Planechase\");","map":{"version":3,"names":["React","useState","CardDisplay","Controls","jsxDEV","_jsxDEV","cardDisplayFunctions","importAll","r","set","images","keys","forEach","item","index","replace","Planechase","_s","shuffleDeck","deck","console","log","i","length","j","Math","floor","random","temp","handleCardClick","discardPile","shownCards","tempShuffledCardList","shuffledCardList","push","pop","setShownCards","setActiveCard","makeDecks","mtgImages","require","context","whoImages","cardImages","tempDeck","sets","indexOf","Object","key","cardList","setSets","stateVars","setCardList","setShuffledCardList","activeCard","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleClick","_c","$RefreshReg$"],"sources":["/Users/danhuber/Desktop/development/planechase-new/planechase/src/App.js"],"sourcesContent":["import React, {useState} from \"react\";\nimport CardDisplay from \"./card-display/CardDisplay.js\";\nimport Controls from \"./controls/Controls.js\";\n\nfunction cardDisplayFunctions() {\n  function importAll(r, set) {\n    let images = {};\n    r.keys().forEach((item, index) => {\n      images[item.replace(`./img/planes/${set}`, \"\")] = r(item);\n    });\n    return images;\n  }\n}\n\nexport default function Planechase() {\n\n  \n\n  function shuffleDeck(deck) {\n    console.log(\"shuffleDeck\");\n    for (var i = deck.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = deck[i];\n      deck[i] = deck[j];\n      deck[j] = temp;\n    }\n  }\n\n  function handleCardClick() {\n    console.log(\"handleClick\");\n    const discardPile = shownCards;\n    const tempShuffledCardList = shuffledCardList;\n    discardPile.push(tempShuffledCardList.pop());\n\n    setShownCards(discardPile);\n    setActiveCard(shownCards[shownCards.length - 1]);\n  }\n\n  function makeDecks() {\n    console.log(\"making decks\");\n    const mtgImages = this.cardDisplayFunctions.importAll(\n      require.context(\"./img/planes/mtg\", false, /\\.(png|jpe?g|svg)$/),\n      \"mtg\"\n    );\n    const whoImages = this.cardDisplayFunctions.importAll(\n      require.context(\"./img/planes/who\", false, /\\.(png|jpe?g|svg)$/),\n      \"who\"\n    );\n    const cardImages = [];\n    const tempDeck = cardImages;\n    const shownCards = [];\n\n    if (sets.indexOf(\"mtg\") > -1) {\n      Object.keys(mtgImages).forEach((key) => {\n        cardImages.push(mtgImages[key]);\n      });\n    }\n\n    if (sets.indexOf(\"who\") > -1) {\n      Object.keys(whoImages).forEach((key) => {\n        cardImages.push(whoImages[key]);\n      });\n    }\n\n    shuffleDeck(tempDeck);\n    shownCards.push(tempDeck.pop());\n\n    return {\n      cardList: cardImages,\n      shuffledCardList: tempDeck,\n      shownCards: shownCards,\n    };\n  }\n\n  console.log(\"rendering card\");\n  const [sets, setSets] = useState([\"mtg\", \"who\"]);\n  const stateVars = makeDecks();\n  const [cardList, setCardList] = useState(stateVars.cardList);\n  const [shuffledCardList, setShuffledCardList] = useState(stateVars.shuffledCardList);\n  const [shownCards, setShownCards] = useState(stateVars.shownCards);\n  const [activeCard, setActiveCard] = useState(shownCards[shownCards.length - 1]);\n\n  \n  return (\n    <div className=\"container\">\n      <div className=\"controls\">\n        <Controls />\n      </div>\n      <div className=\"display\">\n        <CardDisplay activeCard={activeCard} handleClick={handleCardClick}/>\n      </div>\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}