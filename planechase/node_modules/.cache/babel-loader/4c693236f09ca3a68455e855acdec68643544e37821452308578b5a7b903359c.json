{"ast":null,"code":"var _jsxFileName = \"/Users/danhuber/Desktop/development/planechase-new/planechase/src/planechase/Planechase.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PlaneDisplay from '../plane-display/PlaneDisplay.js';\nimport Controls from '../controls/Controls.js';\nimport { getSession, setPlaneById, setPlaneByName, getAllPlanes } from \"../tools/mongoApi.js\";\nimport { dieOptions } from '../tools/consts.js';\nimport SessionCode from '../session-code/SessionCode.js';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Planechase() {\n  _s();\n  function importAll(r, set) {\n    let images = {};\n    r.keys().forEach((item, index) => {\n      images[item.replace(`../img/planes/${set}`, '')] = r(item);\n    });\n    return images;\n  }\n  function shuffleDeck(deck) {\n    console.log('shuffleDeck');\n    for (var i = deck.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = deck[i];\n      deck[i] = deck[j];\n      deck[j] = temp;\n    }\n  }\n  function handlePlaneClick() {\n    console.log('handleClick');\n    const discardPile = shownPlanes;\n    const tempShuffledPlaneList = shuffledPlaneList;\n    discardPile.push(tempShuffledPlaneList.pop());\n    setShownPlanes(discardPile);\n    const newActivePlane = shownPlanes[shownPlanes.length - 1];\n    setActivePlane(newActivePlane);\n    console.log('activePlane: ' + newActivePlane);\n    setPlaneByName(sessionCode, newActivePlane);\n  }\n  function makeDecks() {\n    console.log('making decks');\n    const mtgImages = importAll(require.context('../img/planes/mtg', false, /\\.(png|jpe?g|svg)$/), 'mtg');\n    const whoImages = importAll(require.context('../img/planes/who', false, /\\.(png|jpe?g|svg)$/), 'who');\n    const planeImages = [];\n    const tempDeck = planeImages;\n    const shownPlanes = [];\n    const foundPlaneList = planeList;\n    if (sets.indexOf('mtg') > -1) {\n      Object.keys(mtgImages).forEach(key => {\n        planeImages.push(mtgImages[key]);\n      });\n    }\n    if (sets.indexOf('who') > -1) {\n      Object.keys(whoImages).forEach(key => {\n        planeImages.push(whoImages[key]);\n      });\n    }\n    shuffleDeck(tempDeck);\n    shownPlanes.push(tempDeck.pop());\n    setPlaneList(planeImages);\n    setShuffledPlaneList(tempDeck);\n    setShownPlanes(shownPlanes);\n  }\n  function handleRoll() {\n    console.log('handleRoll');\n    const randomIdx = Math.floor(Math.random() * dieOptions.length);\n    const newResult = dieOptions[randomIdx];\n    const newCount = count + 1;\n    setCurrentResult(newResult);\n    setCount(newCount);\n  }\n  function handleReset() {\n    console.log('handleReset');\n    setCount(0);\n  }\n  const {\n    sessionCode\n  } = useParams();\n  const [planeList, setPlaneList] = useState([]);\n  const [sets, setSets] = useState(['mtg', 'who']);\n  const [shuffledPlaneList, setShuffledPlaneList] = useState([]);\n  const [shownPlanes, setShownPlanes] = useState([]);\n  const [activePlane, setActivePlane] = useState(null);\n  const [currentResult, setCurrentResult] = useState(dieOptions[0]);\n  const [count, setCount] = useState(0);\n  const [session, setSession] = useState(null);\n  useEffect(() => {\n    getAllPlanes().then(planeList => {\n      console.log('planeList: ' + planeList.length);\n      setPlaneList(planeList);\n      makeDecks();\n      setActivePlane(shownPlanes[shownPlanes.length - 1]);\n      getSession(sessionCode).then(session => {\n        setSession(session);\n        console.log(session);\n      });\n    });\n  }, [sessionCode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"session-code\",\n      children: /*#__PURE__*/_jsxDEV(SessionCode, {\n        sessionCode: session ? session.session : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: /*#__PURE__*/_jsxDEV(Controls, {\n        currentResult: currentResult,\n        count: count,\n        handleRollFunction: handleRoll,\n        handleResetFunction: handleReset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display\",\n      children: /*#__PURE__*/_jsxDEV(PlaneDisplay, {\n        activePlane: activePlane,\n        handleClick: handlePlaneClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_s(Planechase, \"EXe5YAKMW9xfpUf6ZMGAjzQd0S8=\", false, function () {\n  return [useParams];\n});\n_c = Planechase;\nvar _c;\n$RefreshReg$(_c, \"Planechase\");","map":{"version":3,"names":["React","useState","useEffect","PlaneDisplay","Controls","getSession","setPlaneById","setPlaneByName","getAllPlanes","dieOptions","SessionCode","useParams","jsxDEV","_jsxDEV","Planechase","_s","importAll","r","set","images","keys","forEach","item","index","replace","shuffleDeck","deck","console","log","i","length","j","Math","floor","random","temp","handlePlaneClick","discardPile","shownPlanes","tempShuffledPlaneList","shuffledPlaneList","push","pop","setShownPlanes","newActivePlane","setActivePlane","sessionCode","makeDecks","mtgImages","require","context","whoImages","planeImages","tempDeck","foundPlaneList","planeList","sets","indexOf","Object","key","setPlaneList","setShuffledPlaneList","handleRoll","randomIdx","newResult","newCount","count","setCurrentResult","setCount","handleReset","setSets","activePlane","currentResult","session","setSession","then","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleRollFunction","handleResetFunction","handleClick","_c","$RefreshReg$"],"sources":["/Users/danhuber/Desktop/development/planechase-new/planechase/src/planechase/Planechase.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport PlaneDisplay from '../plane-display/PlaneDisplay.js';\nimport Controls from '../controls/Controls.js';\nimport { getSession, setPlaneById, setPlaneByName, getAllPlanes } from \"../tools/mongoApi.js\";\nimport { dieOptions } from '../tools/consts.js';\nimport SessionCode from '../session-code/SessionCode.js';\nimport { useParams } from 'react-router-dom';\n\nexport default function Planechase() {\n  function importAll(r, set) {\n    let images = {};\n    r.keys().forEach((item, index) => {\n      images[item.replace(`../img/planes/${set}`, '')] = r(item);\n    });\n    return images;\n  }\n\n  function shuffleDeck(deck) {\n    console.log('shuffleDeck');\n    for (var i = deck.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = deck[i];\n      deck[i] = deck[j];\n      deck[j] = temp; \n    }\n  }\n\n  function handlePlaneClick() {\n    console.log('handleClick');\n    const discardPile = shownPlanes;\n    const tempShuffledPlaneList = shuffledPlaneList;\n    discardPile.push(tempShuffledPlaneList.pop());\n    setShownPlanes(discardPile);\n    const newActivePlane = shownPlanes[shownPlanes.length - 1]\n    setActivePlane(newActivePlane);\n    console.log('activePlane: ' + newActivePlane);\n    setPlaneByName(sessionCode, newActivePlane);\n  }\n\n  function makeDecks() {\n    console.log('making decks');\n    const mtgImages = importAll(\n      require.context('../img/planes/mtg', false, /\\.(png|jpe?g|svg)$/),\n      'mtg'\n    );\n    const whoImages = importAll(\n      require.context('../img/planes/who', false, /\\.(png|jpe?g|svg)$/),\n      'who'\n    );\n    const planeImages = [];\n    const tempDeck = planeImages;\n    const shownPlanes = [];\n    const foundPlaneList = planeList;\n\n    if (sets.indexOf('mtg') > -1) {\n      Object.keys(mtgImages).forEach((key) => {\n        planeImages.push(mtgImages[key]);\n      });\n    }\n\n    if (sets.indexOf('who') > -1) {\n      Object.keys(whoImages).forEach((key) => {\n        planeImages.push(whoImages[key]);\n      });\n    }\n\n    shuffleDeck(tempDeck);\n    shownPlanes.push(tempDeck.pop());\n\n    setPlaneList(planeImages);\n    setShuffledPlaneList(tempDeck);\n    setShownPlanes(shownPlanes);\n  }\n\n  function handleRoll() {\n    console.log('handleRoll');\n    const randomIdx = Math.floor(Math.random() * dieOptions.length);\n    const newResult = dieOptions[randomIdx];\n    const newCount = count + 1;\n\n    setCurrentResult(newResult);\n    setCount(newCount);\n  }\n\n  function handleReset() {\n    console.log('handleReset');\n    setCount(0);\n  }\n\n  const { sessionCode } = useParams();\n  const [planeList, setPlaneList] = useState([]);\n  const [sets, setSets] = useState(['mtg', 'who']);\n  const [shuffledPlaneList, setShuffledPlaneList] = useState([]);\n  const [shownPlanes, setShownPlanes] = useState([]);\n  const [activePlane, setActivePlane] = useState(null);\n  const [currentResult, setCurrentResult] = useState(dieOptions[0]);\n  const [count, setCount] = useState(0);\n  const [session, setSession] = useState(null);\n\n  useEffect(() => {\n    getAllPlanes().then(planeList => {\n      console.log('planeList: ' + planeList.length);\n      setPlaneList(planeList);\n      makeDecks();\n      setActivePlane(shownPlanes[shownPlanes.length - 1]);\n      getSession(sessionCode).then(session => {\n        setSession(session);\n        console.log(session);\n      });\n    });\n  }, [sessionCode]);\n\n  return (\n    <div className='container'>\n      <div className='session-code'>\n        <SessionCode sessionCode={session ? session.session : null}/>\n      </div>\n      <div className='controls'>\n        <Controls currentResult={currentResult} count={count} handleRollFunction={handleRoll} handleResetFunction={handleReset}/>\n      </div>\n      <div className='display'>\n        <PlaneDisplay activePlane={activePlane} handleClick={handlePlaneClick}/>\n      </div>\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,YAAY,MAAM,kCAAkC;AAC3D,OAAOC,QAAQ,MAAM,yBAAyB;AAC9C,SAASC,UAAU,EAAEC,YAAY,EAAEC,cAAc,EAAEC,YAAY,QAAQ,sBAAsB;AAC7F,SAASC,UAAU,QAAQ,oBAAoB;AAC/C,OAAOC,WAAW,MAAM,gCAAgC;AACxD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,SAASC,SAASA,CAACC,CAAC,EAAEC,GAAG,EAAE;IACzB,IAAIC,MAAM,GAAG,CAAC,CAAC;IACfF,CAAC,CAACG,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MAChCJ,MAAM,CAACG,IAAI,CAACE,OAAO,CAAE,iBAAgBN,GAAI,EAAC,EAAE,EAAE,CAAC,CAAC,GAAGD,CAAC,CAACK,IAAI,CAAC;IAC5D,CAAC,CAAC;IACF,OAAOH,MAAM;EACf;EAEA,SAASM,WAAWA,CAACC,IAAI,EAAE;IACzBC,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1B,KAAK,IAAIC,CAAC,GAAGH,IAAI,CAACI,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MACxC,IAAIE,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIL,CAAC,GAAG,CAAC,CAAC,CAAC;MAC3C,IAAIM,IAAI,GAAGT,IAAI,CAACG,CAAC,CAAC;MAClBH,IAAI,CAACG,CAAC,CAAC,GAAGH,IAAI,CAACK,CAAC,CAAC;MACjBL,IAAI,CAACK,CAAC,CAAC,GAAGI,IAAI;IAChB;EACF;EAEA,SAASC,gBAAgBA,CAAA,EAAG;IAC1BT,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1B,MAAMS,WAAW,GAAGC,WAAW;IAC/B,MAAMC,qBAAqB,GAAGC,iBAAiB;IAC/CH,WAAW,CAACI,IAAI,CAACF,qBAAqB,CAACG,GAAG,CAAC,CAAC,CAAC;IAC7CC,cAAc,CAACN,WAAW,CAAC;IAC3B,MAAMO,cAAc,GAAGN,WAAW,CAACA,WAAW,CAACR,MAAM,GAAG,CAAC,CAAC;IAC1De,cAAc,CAACD,cAAc,CAAC;IAC9BjB,OAAO,CAACC,GAAG,CAAC,eAAe,GAAGgB,cAAc,CAAC;IAC7CrC,cAAc,CAACuC,WAAW,EAAEF,cAAc,CAAC;EAC7C;EAEA,SAASG,SAASA,CAAA,EAAG;IACnBpB,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3B,MAAMoB,SAAS,GAAGhC,SAAS,CACzBiC,OAAO,CAACC,OAAO,CAAC,mBAAmB,EAAE,KAAK,EAAE,oBAAoB,CAAC,EACjE,KACF,CAAC;IACD,MAAMC,SAAS,GAAGnC,SAAS,CACzBiC,OAAO,CAACC,OAAO,CAAC,mBAAmB,EAAE,KAAK,EAAE,oBAAoB,CAAC,EACjE,KACF,CAAC;IACD,MAAME,WAAW,GAAG,EAAE;IACtB,MAAMC,QAAQ,GAAGD,WAAW;IAC5B,MAAMd,WAAW,GAAG,EAAE;IACtB,MAAMgB,cAAc,GAAGC,SAAS;IAEhC,IAAIC,IAAI,CAACC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE;MAC5BC,MAAM,CAACtC,IAAI,CAAC4B,SAAS,CAAC,CAAC3B,OAAO,CAAEsC,GAAG,IAAK;QACtCP,WAAW,CAACX,IAAI,CAACO,SAAS,CAACW,GAAG,CAAC,CAAC;MAClC,CAAC,CAAC;IACJ;IAEA,IAAIH,IAAI,CAACC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE;MAC5BC,MAAM,CAACtC,IAAI,CAAC+B,SAAS,CAAC,CAAC9B,OAAO,CAAEsC,GAAG,IAAK;QACtCP,WAAW,CAACX,IAAI,CAACU,SAAS,CAACQ,GAAG,CAAC,CAAC;MAClC,CAAC,CAAC;IACJ;IAEAlC,WAAW,CAAC4B,QAAQ,CAAC;IACrBf,WAAW,CAACG,IAAI,CAACY,QAAQ,CAACX,GAAG,CAAC,CAAC,CAAC;IAEhCkB,YAAY,CAACR,WAAW,CAAC;IACzBS,oBAAoB,CAACR,QAAQ,CAAC;IAC9BV,cAAc,CAACL,WAAW,CAAC;EAC7B;EAEA,SAASwB,UAAUA,CAAA,EAAG;IACpBnC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IACzB,MAAMmC,SAAS,GAAG/B,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGzB,UAAU,CAACqB,MAAM,CAAC;IAC/D,MAAMkC,SAAS,GAAGvD,UAAU,CAACsD,SAAS,CAAC;IACvC,MAAME,QAAQ,GAAGC,KAAK,GAAG,CAAC;IAE1BC,gBAAgB,CAACH,SAAS,CAAC;IAC3BI,QAAQ,CAACH,QAAQ,CAAC;EACpB;EAEA,SAASI,WAAWA,CAAA,EAAG;IACrB1C,OAAO,CAACC,GAAG,CAAC,aAAa,CAAC;IAC1BwC,QAAQ,CAAC,CAAC,CAAC;EACb;EAEA,MAAM;IAAEtB;EAAY,CAAC,GAAGnC,SAAS,CAAC,CAAC;EACnC,MAAM,CAAC4C,SAAS,EAAEK,YAAY,CAAC,GAAG3D,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACuD,IAAI,EAAEc,OAAO,CAAC,GAAGrE,QAAQ,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;EAChD,MAAM,CAACuC,iBAAiB,EAAEqB,oBAAoB,CAAC,GAAG5D,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACqC,WAAW,EAAEK,cAAc,CAAC,GAAG1C,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACsE,WAAW,EAAE1B,cAAc,CAAC,GAAG5C,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACuE,aAAa,EAAEL,gBAAgB,CAAC,GAAGlE,QAAQ,CAACQ,UAAU,CAAC,CAAC,CAAC,CAAC;EACjE,MAAM,CAACyD,KAAK,EAAEE,QAAQ,CAAC,GAAGnE,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACwE,OAAO,EAAEC,UAAU,CAAC,GAAGzE,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACdM,YAAY,CAAC,CAAC,CAACmE,IAAI,CAACpB,SAAS,IAAI;MAC/B5B,OAAO,CAACC,GAAG,CAAC,aAAa,GAAG2B,SAAS,CAACzB,MAAM,CAAC;MAC7C8B,YAAY,CAACL,SAAS,CAAC;MACvBR,SAAS,CAAC,CAAC;MACXF,cAAc,CAACP,WAAW,CAACA,WAAW,CAACR,MAAM,GAAG,CAAC,CAAC,CAAC;MACnDzB,UAAU,CAACyC,WAAW,CAAC,CAAC6B,IAAI,CAACF,OAAO,IAAI;QACtCC,UAAU,CAACD,OAAO,CAAC;QACnB9C,OAAO,CAACC,GAAG,CAAC6C,OAAO,CAAC;MACtB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,EAAE,CAAC3B,WAAW,CAAC,CAAC;EAEjB,oBACEjC,OAAA;IAAK+D,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBhE,OAAA;MAAK+D,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC3BhE,OAAA,CAACH,WAAW;QAACoC,WAAW,EAAE2B,OAAO,GAAGA,OAAO,CAACA,OAAO,GAAG;MAAK;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC,eACNpE,OAAA;MAAK+D,SAAS,EAAC,UAAU;MAAAC,QAAA,eACvBhE,OAAA,CAACT,QAAQ;QAACoE,aAAa,EAAEA,aAAc;QAACN,KAAK,EAAEA,KAAM;QAACgB,kBAAkB,EAAEpB,UAAW;QAACqB,mBAAmB,EAAEd;MAAY;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtH,CAAC,eACNpE,OAAA;MAAK+D,SAAS,EAAC,SAAS;MAAAC,QAAA,eACtBhE,OAAA,CAACV,YAAY;QAACoE,WAAW,EAAEA,WAAY;QAACa,WAAW,EAAEhD;MAAiB;QAAA0C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAClE,EAAA,CArHuBD,UAAU;EAAA,QAiFRH,SAAS;AAAA;AAAA0E,EAAA,GAjFXvE,UAAU;AAAA,IAAAuE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}