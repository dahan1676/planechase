{"ast":null,"code":"var _jsxFileName = \"/Users/danhuber/Desktop/development/planechase-new/planechase/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CardDisplay from './card-display/CardDisplay.js';\nimport Controls from './controls/Controls.js';\nimport Planeswalk from \"./img/symbols/PW.png\";\nimport Chaos from \"./img/symbols/CHAOS.png\";\nimport Blank from \"./img/symbols/BLANK.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Planechase() {\n  _s();\n  function importAll(r, set) {\n    let images = {};\n    r.keys().forEach((item, index) => {\n      images[item.replace(`./img/planes/${set}`, '')] = r(item);\n    });\n    return images;\n  }\n  function shuffleDeck(deck) {\n    console.log('shuffleDeck');\n    for (var i = deck.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = deck[i];\n      deck[i] = deck[j];\n      deck[j] = temp;\n    }\n  }\n  function handleCardClick() {\n    console.log('handleClick');\n    const discardPile = shownCards;\n    const tempShuffledCardList = shuffledCardList;\n    discardPile.push(tempShuffledCardList.pop());\n    setShownCards(discardPile);\n    setActiveCard(shownCards[shownCards.length - 1]);\n  }\n  function makeDecks() {\n    console.log('making decks');\n    const mtgImages = importAll(require.context('./img/planes/mtg', false, /\\.(png|jpe?g|svg)$/), 'mtg');\n    const whoImages = importAll(require.context('./img/planes/who', false, /\\.(png|jpe?g|svg)$/), 'who');\n    const cardImages = [];\n    const tempDeck = cardImages;\n    const shownCards = [];\n    if (sets.indexOf('mtg') > -1) {\n      Object.keys(mtgImages).forEach(key => {\n        cardImages.push(mtgImages[key]);\n      });\n    }\n    if (sets.indexOf('who') > -1) {\n      Object.keys(whoImages).forEach(key => {\n        cardImages.push(whoImages[key]);\n      });\n    }\n    shuffleDeck(tempDeck);\n    shownCards.push(tempDeck.pop());\n    return {\n      cardList: cardImages,\n      shuffledCardList: tempDeck,\n      shownCards: shownCards\n    };\n  }\n  function handleRoll() {\n    console.log('handleRoll');\n    const randomIdx = Math.floor(Math.random() * options.length);\n    const newResult = options[randomIdx];\n    const newCount = count + 1;\n    setCurrentResult(newResult);\n    setCount(newCount);\n  }\n  function handleReset() {\n    console.log('handleReset');\n    setCount(0);\n  }\n  function getSession() {\n    console.log('getSession');\n  }\n  const options = [{\n    name: 'Blank',\n    image: Blank\n  }, {\n    name: 'Blank',\n    image: Blank\n  }, {\n    name: 'Blank',\n    image: Blank\n  }, {\n    name: 'Blank',\n    image: Blank\n  }, {\n    name: 'Planeswalk',\n    image: Planeswalk\n  }, {\n    name: 'Chaos',\n    image: Chaos\n  }];\n  console.log('rendering card');\n  const [sets, setSets] = useState(['mtg', 'who']);\n  const stateVars = makeDecks();\n  const [cardList, setCardList] = useState(stateVars.cardList);\n  const [shuffledCardList, setShuffledCardList] = useState(stateVars.shuffledCardList);\n  const [shownCards, setShownCards] = useState(stateVars.shownCards);\n  const [activeCard, setActiveCard] = useState(shownCards[shownCards.length - 1]);\n  console.log('making controls');\n  const [currentResult, setCurrentResult] = useState(options[0]);\n  const [count, setCount] = useState(0);\n  console.log('setting up mongoDb');\n  const [session, setSession] = useState(null);\n  const dataSource = 'dhuber-cluster-0';\n  const database = 'planechase';\n  const sessionCollection = 'sessions';\n  const headers = new Headers();\n  headers.append(\"Content-Type\", \"application/json\");\n  const body = JSON.stringify({\n    'dataSource': dataSource,\n    'database': database,\n    'collection': sessionCollection,\n    'filter': '{ \"_id\": \"ABCD\" }'\n  });\n  const requestOptions = {\n    method: 'GET',\n    headers: headers,\n    body: body\n  };\n  useEffect(() => {\n    fetch('https://us-east-1.aws.data.mongodb-api.com/app/data-napyt/endpoint/data/v1/action/findOne', requestOptions).then(response => response.json()).then(data => setSession(data)).catch(error => console.error(error));\n  });\n  console.log('session: ' + session);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: /*#__PURE__*/_jsxDEV(Controls, {\n        currentResult: currentResult,\n        count: count,\n        handleRoll: handleRoll,\n        handleReset: handleReset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display\",\n      children: /*#__PURE__*/_jsxDEV(CardDisplay, {\n        activeCard: activeCard,\n        handleClick: handleCardClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n_s(Planechase, \"oXsvcgqCfr6K05/qL1NHFDC6CGQ=\");\n_c = Planechase;\nvar _c;\n$RefreshReg$(_c, \"Planechase\");","map":{"version":3,"names":["React","useState","useEffect","CardDisplay","Controls","Planeswalk","Chaos","Blank","jsxDEV","_jsxDEV","Planechase","_s","importAll","r","set","images","keys","forEach","item","index","replace","shuffleDeck","deck","console","log","i","length","j","Math","floor","random","temp","handleCardClick","discardPile","shownCards","tempShuffledCardList","shuffledCardList","push","pop","setShownCards","setActiveCard","makeDecks","mtgImages","require","context","whoImages","cardImages","tempDeck","sets","indexOf","Object","key","cardList","handleRoll","randomIdx","options","newResult","newCount","count","setCurrentResult","setCount","handleReset","getSession","name","image","setSets","stateVars","setCardList","setShuffledCardList","activeCard","currentResult","session","setSession","dataSource","database","sessionCollection","headers","Headers","append","body","JSON","stringify","requestOptions","method","fetch","then","response","json","data","catch","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleClick","_c","$RefreshReg$"],"sources":["/Users/danhuber/Desktop/development/planechase-new/planechase/src/App.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport CardDisplay from './card-display/CardDisplay.js';\nimport Controls from './controls/Controls.js';\nimport Planeswalk from \"./img/symbols/PW.png\";\nimport Chaos from \"./img/symbols/CHAOS.png\";\nimport Blank from \"./img/symbols/BLANK.png\";\n\nexport default function Planechase() {\n  function importAll(r, set) {\n    let images = {};\n    r.keys().forEach((item, index) => {\n      images[item.replace(`./img/planes/${set}`, '')] = r(item);\n    });\n    return images;\n  }\n\n  function shuffleDeck(deck) {\n    console.log('shuffleDeck');\n    for (var i = deck.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = deck[i];\n      deck[i] = deck[j];\n      deck[j] = temp; \n    }\n  }\n\n  function handleCardClick() {\n    console.log('handleClick');\n    const discardPile = shownCards;\n    const tempShuffledCardList = shuffledCardList;\n    discardPile.push(tempShuffledCardList.pop());\n\n    setShownCards(discardPile);\n    setActiveCard(shownCards[shownCards.length - 1]);\n  }\n\n  function makeDecks() {\n    console.log('making decks');\n    const mtgImages = importAll(\n      require.context('./img/planes/mtg', false, /\\.(png|jpe?g|svg)$/),\n      'mtg'\n    );\n    const whoImages = importAll(\n      require.context('./img/planes/who', false, /\\.(png|jpe?g|svg)$/),\n      'who'\n    );\n    const cardImages = [];\n    const tempDeck = cardImages;\n    const shownCards = [];\n\n    if (sets.indexOf('mtg') > -1) {\n      Object.keys(mtgImages).forEach((key) => {\n        cardImages.push(mtgImages[key]);\n      });\n    }\n\n    if (sets.indexOf('who') > -1) {\n      Object.keys(whoImages).forEach((key) => {\n        cardImages.push(whoImages[key]);\n      });\n    }\n\n    shuffleDeck(tempDeck);\n    shownCards.push(tempDeck.pop());\n\n    return {\n      cardList: cardImages,\n      shuffledCardList: tempDeck,\n      shownCards: shownCards,\n    };\n  }\n\n  function handleRoll() {\n    console.log('handleRoll');\n    const randomIdx = Math.floor(Math.random() * options.length);\n    const newResult = options[randomIdx];\n    const newCount = count + 1;\n\n    setCurrentResult(newResult);\n    setCount(newCount);\n  }\n\n  function handleReset() {\n    console.log('handleReset');\n    setCount(0);\n  }\n\n  function getSession() {\n    console.log('getSession');\n  }\n\n  const options = [\n    {\n      name: 'Blank',\n      image: Blank,\n    },\n    {\n      name: 'Blank',\n      image: Blank,\n    },\n    {\n      name: 'Blank',\n      image: Blank,\n    },\n    {\n      name: 'Blank',\n      image: Blank,\n    },\n    {\n      name: 'Planeswalk',\n      image: Planeswalk,\n    },\n    {\n      name: 'Chaos',\n      image: Chaos,\n    },\n  ];\n\n  console.log('rendering card');\n  const [sets, setSets] = useState(['mtg', 'who']);\n  const stateVars = makeDecks();\n  const [cardList, setCardList] = useState(stateVars.cardList);\n  const [shuffledCardList, setShuffledCardList] = useState(stateVars.shuffledCardList);\n  const [shownCards, setShownCards] = useState(stateVars.shownCards);\n  const [activeCard, setActiveCard] = useState(shownCards[shownCards.length - 1]);\n\n  console.log('making controls');\n  const [currentResult, setCurrentResult] = useState(options[0]);\n  const [count, setCount] = useState(0);\n\n  console.log('setting up mongoDb');\n  const [session, setSession] = useState(null);\n  const dataSource = 'dhuber-cluster-0';\n  const database = 'planechase';\n  const sessionCollection = 'sessions';\n  const headers = new Headers();\n  headers.append(\"Content-Type\", \"application/json\");\n\n  const body = JSON.stringify({\n    'dataSource': dataSource,\n    'database': database,\n    'collection': sessionCollection,\n    'filter': '{ \"_id\": \"ABCD\" }'\n  });\n\n  const requestOptions = {\n    method: 'GET',\n    headers: headers,\n    body: body\n  }\n\n  useEffect(() => {\n    fetch('https://us-east-1.aws.data.mongodb-api.com/app/data-napyt/endpoint/data/v1/action/findOne', requestOptions)\n      .then(response => response.json())\n      .then(data => setSession(data))\n      .catch(error => console.error(error));\n  });\n\n  console.log('session: ' + session);\n\n  return (\n    <div className='container'>\n      <div className='controls'>\n        <Controls currentResult={currentResult} count={count} handleRoll={handleRoll} handleReset={handleReset}/>\n      </div>\n      <div className='display'>\n        <CardDisplay activeCard={activeCard} handleClick={handleCardClick}/>\n      </div>\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}