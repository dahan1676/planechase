{"ast":null,"code":"var _jsxFileName = \"/Users/danhuber/Desktop/development/planechase-new/planechase/src/planechase/Planechase.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PlaneDisplay from '../plane-display/PlaneDisplay.js';\nimport Controls from '../controls/Controls.js';\nimport { getSession, setPlaneById, getAllPlanes, setRollInfo } from \"../tools/mongoApi.js\";\nimport { dieOptions, planeImages } from '../tools/consts.js';\nimport SessionCode from '../session-code/SessionCode.js';\nimport { useParams } from 'react-router-dom';\nimport { getMappedPlaneList, getDieResultFromName } from '../tools/utils.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Planechase() {\n  _s();\n  function importAll(r, set) {\n    let images = {};\n    r.keys().forEach((item, index) => {\n      images[item.replace(`../img/planes/${set}`, '')] = r(item);\n    });\n    return images;\n  }\n  function shuffleDeck(deck) {\n    for (var i = deck.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = deck[i];\n      deck[i] = deck[j];\n      deck[j] = temp;\n    }\n  }\n  function handlePlaneClick() {\n    const discardPile = shownPlanes;\n    const tempShuffledPlaneList = shuffledPlaneList;\n    discardPile.push(tempShuffledPlaneList.pop());\n    setShownPlanes(discardPile);\n    const newActivePlane = shownPlanes[shownPlanes.length - 1];\n    setActivePlane(newActivePlane);\n    setPlaneById(session.code, newActivePlane.id);\n  }\n  function makeDeckAndShownPlanes(planeList) {\n    const planeImages = importAll(require.context('../img/planes', true, /\\.(png|jpe?g|svg)$/), 'mtg');\n    const mappedPlaneList = getMappedPlaneList(planeList, planeImages);\n    const shuffledDeck = mappedPlaneList;\n    const shownPlanes = [];\n    shuffleDeck(shuffledDeck);\n    shownPlanes.push(shuffledDeck.pop());\n    setShuffledPlaneList(shuffledDeck);\n    setShownPlanes(shownPlanes);\n    return {\n      shownPlanes: shownPlanes,\n      imageMap: planeImages\n    };\n  }\n  function handleRoll() {\n    const randomIdx = Math.floor(Math.random() * dieOptions.length);\n    const newResult = dieOptions[randomIdx];\n    const newCost = rollCost + 1;\n    setRollResult(newResult);\n    setRollCost(newCost);\n    setRollInfo(session.code, newCost, newResult.name);\n  }\n  function handleReset() {\n    setRollCost(0);\n    setRollResult(dieOptions[0]);\n    setRollInfo(session.code, 0, 'Blank');\n  }\n  function setStateInfo(session) {\n    setSession(session);\n    setActivePlane(session.plane);\n    setRollResult(getDieResultFromName(session.rollResult));\n    setRollCost(session.rollCost);\n    setPlanarDeck(session.planarDeck);\n  }\n  console.log('init');\n  const {\n    inputSessionCode\n  } = useParams();\n  const {\n    state\n  } = useLocation();\n  const [sets, setSets] = useState(['mtg', 'who']);\n  const [shuffledPlaneList, setShuffledPlaneList] = useState([]);\n  const [shownPlanes, setShownPlanes] = useState([]);\n  const [activePlane, setActivePlane] = useState(null);\n  const [planarDeck, setPlanarDeck] = useState([]);\n  const [rollResult, setRollResult] = useState(dieOptions[0]);\n  const [rollCost, setRollCost] = useState(0);\n  const [session, setSession] = useState(null);\n  const [timer, setTimer] = useState(0);\n  useEffect(() => {\n    console.log('using effect');\n    if (state) {\n      setStateInfo(state);\n    } else {\n      getSession(inputSessionCode, planeImages).then(session => {\n        setStateInfo(session);\n      });\n    }\n  }, [state]);\n\n  // useEffect(() => {\n  //   getAllPlanes().then(planeList => {\n  //     console.log('planeList: ' + planeList.length);\n  //     const planeObj = makeDeckAndShownPlanes(planeList);\n  //     const firstPlane = planeObj.shownPlanes[planeObj.shownPlanes.length - 1];\n  //     const sessionCode = session ? session.code : inputSessionCode\n\n  // getSession(sessionCode, firstPlane, planeObj.imageMap).then(session => {\n  //   setSession(session);\n  //   console.log(session);\n  //   setActivePlane(session.plane);\n  //   setCost(session.rollCost);\n  //   setCurrentResult(getDieResultFromName(session.rollResult));\n  //   // setTimeout(() => {\n  //   //   setTimer(timer + 1);\n  //   // }, '2000');\n  // });\n  //   });\n  // }, [inputSessionCode, timer]);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"session-code\",\n      children: /*#__PURE__*/_jsxDEV(SessionCode, {\n        sessionCode: session ? session.code : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: /*#__PURE__*/_jsxDEV(Controls, {\n        currentResult: rollResult,\n        cost: rollCost,\n        handleRollFunction: handleRoll,\n        handleResetFunction: handleReset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display\",\n      children: /*#__PURE__*/_jsxDEV(PlaneDisplay, {\n        activePlane: activePlane,\n        handleClick: handlePlaneClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n_s(Planechase, \"W6gfBtqA6u2CuvCzaWycPYSFlFk=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = Planechase;\nvar _c;\n$RefreshReg$(_c, \"Planechase\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","PlaneDisplay","Controls","getSession","setPlaneById","getAllPlanes","setRollInfo","dieOptions","planeImages","SessionCode","useParams","getMappedPlaneList","getDieResultFromName","jsxDEV","_jsxDEV","Planechase","_s","importAll","r","set","images","keys","forEach","item","index","replace","shuffleDeck","deck","i","length","j","Math","floor","random","temp","handlePlaneClick","discardPile","shownPlanes","tempShuffledPlaneList","shuffledPlaneList","push","pop","setShownPlanes","newActivePlane","setActivePlane","session","code","id","makeDeckAndShownPlanes","planeList","require","context","mappedPlaneList","shuffledDeck","setShuffledPlaneList","imageMap","handleRoll","randomIdx","newResult","newCost","rollCost","setRollResult","setRollCost","name","handleReset","setStateInfo","setSession","plane","rollResult","setPlanarDeck","planarDeck","console","log","inputSessionCode","state","sets","setSets","activePlane","timer","setTimer","then","className","children","sessionCode","fileName","_jsxFileName","lineNumber","columnNumber","currentResult","cost","handleRollFunction","handleResetFunction","handleClick","_c","$RefreshReg$"],"sources":["/Users/danhuber/Desktop/development/planechase-new/planechase/src/planechase/Planechase.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PlaneDisplay from '../plane-display/PlaneDisplay.js';\nimport Controls from '../controls/Controls.js';\nimport { getSession, setPlaneById, getAllPlanes, setRollInfo } from \"../tools/mongoApi.js\";\nimport { dieOptions, planeImages } from '../tools/consts.js';\nimport SessionCode from '../session-code/SessionCode.js';\nimport { useParams } from 'react-router-dom';\nimport { getMappedPlaneList, getDieResultFromName } from '../tools/utils.js';\n\nexport default function Planechase() {\n  function importAll(r, set) {\n    let images = {};\n    r.keys().forEach((item, index) => {\n      images[item.replace(`../img/planes/${set}`, '')] = r(item);\n    });\n    return images;\n  }\n\n  function shuffleDeck(deck) {\n    for (var i = deck.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = deck[i];\n      deck[i] = deck[j];\n      deck[j] = temp; \n    }\n  }\n\n  function handlePlaneClick() {\n    const discardPile = shownPlanes;\n    const tempShuffledPlaneList = shuffledPlaneList;\n    discardPile.push(tempShuffledPlaneList.pop());\n    setShownPlanes(discardPile);\n    const newActivePlane = shownPlanes[shownPlanes.length - 1]\n    setActivePlane(newActivePlane);\n    setPlaneById(session.code, newActivePlane.id);\n  }\n\n  function makeDeckAndShownPlanes(planeList) {\n    const planeImages = importAll(\n      require.context('../img/planes', true, /\\.(png|jpe?g|svg)$/),\n      'mtg'\n    );\n\n    const mappedPlaneList = getMappedPlaneList(planeList, planeImages);\n    const shuffledDeck = mappedPlaneList;\n    const shownPlanes = [];\n\n    shuffleDeck(shuffledDeck);\n    shownPlanes.push(shuffledDeck.pop());\n    setShuffledPlaneList(shuffledDeck);\n    setShownPlanes(shownPlanes);\n    return {\n      shownPlanes: shownPlanes,\n      imageMap: planeImages\n    }\n  }\n\n  function handleRoll() {\n    const randomIdx = Math.floor(Math.random() * dieOptions.length);\n    const newResult = dieOptions[randomIdx];\n    const newCost = rollCost + 1;\n\n    setRollResult(newResult);\n    setRollCost(newCost);\n    setRollInfo(session.code, newCost, newResult.name);\n  }\n\n  function handleReset() {\n    setRollCost(0);\n    setRollResult(dieOptions[0]);\n    setRollInfo(session.code, 0, 'Blank');\n  }\n\n  function setStateInfo(session) {\n    setSession(session);\n    setActivePlane(session.plane);\n    setRollResult(getDieResultFromName(session.rollResult));\n    setRollCost(session.rollCost);\n    setPlanarDeck(session.planarDeck);\n  }\n\n  console.log('init');\n  const { inputSessionCode } = useParams();\n  const { state } = useLocation();\n  const [sets, setSets] = useState(['mtg', 'who']);\n  const [shuffledPlaneList, setShuffledPlaneList] = useState([]);\n  const [shownPlanes, setShownPlanes] = useState([]);\n  const [activePlane, setActivePlane] = useState(null);\n  const [planarDeck, setPlanarDeck] = useState([]);\n  const [rollResult, setRollResult] = useState(dieOptions[0]);\n  const [rollCost, setRollCost] = useState(0);\n  const [session, setSession] = useState(null);\n  const [timer, setTimer] = useState(0);\n\n  useEffect(() => {\n    console.log('using effect');\n    if (state) {\n      setStateInfo(state);\n    } else {\n      getSession(inputSessionCode, planeImages).then(session => {\n        setStateInfo(session);\n      });\n    }\n  }, [state]);\n\n  // useEffect(() => {\n  //   getAllPlanes().then(planeList => {\n  //     console.log('planeList: ' + planeList.length);\n  //     const planeObj = makeDeckAndShownPlanes(planeList);\n  //     const firstPlane = planeObj.shownPlanes[planeObj.shownPlanes.length - 1];\n  //     const sessionCode = session ? session.code : inputSessionCode\n      \n      // getSession(sessionCode, firstPlane, planeObj.imageMap).then(session => {\n      //   setSession(session);\n      //   console.log(session);\n      //   setActivePlane(session.plane);\n      //   setCost(session.rollCost);\n      //   setCurrentResult(getDieResultFromName(session.rollResult));\n      //   // setTimeout(() => {\n      //   //   setTimer(timer + 1);\n      //   // }, '2000');\n      // });\n  //   });\n  // }, [inputSessionCode, timer]);\n\n  return (\n    <div className='container'>\n      <div className='session-code'>\n        <SessionCode sessionCode={session ? session.code : null}/>\n      </div>\n      <div className='controls'>\n        <Controls currentResult={rollResult} cost={rollCost} handleRollFunction={handleRoll} handleResetFunction={handleReset}/>\n      </div>\n      <div className='display'>\n        <PlaneDisplay activePlane={activePlane} handleClick={handlePlaneClick}/>\n      </div>\n    </div>\n  );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,YAAY,MAAM,kCAAkC;AAC3D,OAAOC,QAAQ,MAAM,yBAAyB;AAC9C,SAASC,UAAU,EAAEC,YAAY,EAAEC,YAAY,EAAEC,WAAW,QAAQ,sBAAsB;AAC1F,SAASC,UAAU,EAAEC,WAAW,QAAQ,oBAAoB;AAC5D,OAAOC,WAAW,MAAM,gCAAgC;AACxD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,kBAAkB,EAAEC,oBAAoB,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7E,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,SAASC,SAASA,CAACC,CAAC,EAAEC,GAAG,EAAE;IACzB,IAAIC,MAAM,GAAG,CAAC,CAAC;IACfF,CAAC,CAACG,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MAChCJ,MAAM,CAACG,IAAI,CAACE,OAAO,CAAE,iBAAgBN,GAAI,EAAC,EAAE,EAAE,CAAC,CAAC,GAAGD,CAAC,CAACK,IAAI,CAAC;IAC5D,CAAC,CAAC;IACF,OAAOH,MAAM;EACf;EAEA,SAASM,WAAWA,CAACC,IAAI,EAAE;IACzB,KAAK,IAAIC,CAAC,GAAGD,IAAI,CAACE,MAAM,GAAG,CAAC,EAAED,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MACxC,IAAIE,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIL,CAAC,GAAG,CAAC,CAAC,CAAC;MAC3C,IAAIM,IAAI,GAAGP,IAAI,CAACC,CAAC,CAAC;MAClBD,IAAI,CAACC,CAAC,CAAC,GAAGD,IAAI,CAACG,CAAC,CAAC;MACjBH,IAAI,CAACG,CAAC,CAAC,GAAGI,IAAI;IAChB;EACF;EAEA,SAASC,gBAAgBA,CAAA,EAAG;IAC1B,MAAMC,WAAW,GAAGC,WAAW;IAC/B,MAAMC,qBAAqB,GAAGC,iBAAiB;IAC/CH,WAAW,CAACI,IAAI,CAACF,qBAAqB,CAACG,GAAG,CAAC,CAAC,CAAC;IAC7CC,cAAc,CAACN,WAAW,CAAC;IAC3B,MAAMO,cAAc,GAAGN,WAAW,CAACA,WAAW,CAACR,MAAM,GAAG,CAAC,CAAC;IAC1De,cAAc,CAACD,cAAc,CAAC;IAC9BvC,YAAY,CAACyC,OAAO,CAACC,IAAI,EAAEH,cAAc,CAACI,EAAE,CAAC;EAC/C;EAEA,SAASC,sBAAsBA,CAACC,SAAS,EAAE;IACzC,MAAMzC,WAAW,GAAGS,SAAS,CAC3BiC,OAAO,CAACC,OAAO,CAAC,eAAe,EAAE,IAAI,EAAE,oBAAoB,CAAC,EAC5D,KACF,CAAC;IAED,MAAMC,eAAe,GAAGzC,kBAAkB,CAACsC,SAAS,EAAEzC,WAAW,CAAC;IAClE,MAAM6C,YAAY,GAAGD,eAAe;IACpC,MAAMf,WAAW,GAAG,EAAE;IAEtBX,WAAW,CAAC2B,YAAY,CAAC;IACzBhB,WAAW,CAACG,IAAI,CAACa,YAAY,CAACZ,GAAG,CAAC,CAAC,CAAC;IACpCa,oBAAoB,CAACD,YAAY,CAAC;IAClCX,cAAc,CAACL,WAAW,CAAC;IAC3B,OAAO;MACLA,WAAW,EAAEA,WAAW;MACxBkB,QAAQ,EAAE/C;IACZ,CAAC;EACH;EAEA,SAASgD,UAAUA,CAAA,EAAG;IACpB,MAAMC,SAAS,GAAG1B,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG1B,UAAU,CAACsB,MAAM,CAAC;IAC/D,MAAM6B,SAAS,GAAGnD,UAAU,CAACkD,SAAS,CAAC;IACvC,MAAME,OAAO,GAAGC,QAAQ,GAAG,CAAC;IAE5BC,aAAa,CAACH,SAAS,CAAC;IACxBI,WAAW,CAACH,OAAO,CAAC;IACpBrD,WAAW,CAACuC,OAAO,CAACC,IAAI,EAAEa,OAAO,EAAED,SAAS,CAACK,IAAI,CAAC;EACpD;EAEA,SAASC,WAAWA,CAAA,EAAG;IACrBF,WAAW,CAAC,CAAC,CAAC;IACdD,aAAa,CAACtD,UAAU,CAAC,CAAC,CAAC,CAAC;IAC5BD,WAAW,CAACuC,OAAO,CAACC,IAAI,EAAE,CAAC,EAAE,OAAO,CAAC;EACvC;EAEA,SAASmB,YAAYA,CAACpB,OAAO,EAAE;IAC7BqB,UAAU,CAACrB,OAAO,CAAC;IACnBD,cAAc,CAACC,OAAO,CAACsB,KAAK,CAAC;IAC7BN,aAAa,CAACjD,oBAAoB,CAACiC,OAAO,CAACuB,UAAU,CAAC,CAAC;IACvDN,WAAW,CAACjB,OAAO,CAACe,QAAQ,CAAC;IAC7BS,aAAa,CAACxB,OAAO,CAACyB,UAAU,CAAC;EACnC;EAEAC,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;EACnB,MAAM;IAAEC;EAAiB,CAAC,GAAG/D,SAAS,CAAC,CAAC;EACxC,MAAM;IAAEgE;EAAM,CAAC,GAAG1E,WAAW,CAAC,CAAC;EAC/B,MAAM,CAAC2E,IAAI,EAAEC,OAAO,CAAC,GAAG9E,QAAQ,CAAC,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;EAChD,MAAM,CAACyC,iBAAiB,EAAEe,oBAAoB,CAAC,GAAGxD,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACuC,WAAW,EAAEK,cAAc,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAAC+E,WAAW,EAAEjC,cAAc,CAAC,GAAG9C,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACwE,UAAU,EAAED,aAAa,CAAC,GAAGvE,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACsE,UAAU,EAAEP,aAAa,CAAC,GAAG/D,QAAQ,CAACS,UAAU,CAAC,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACqD,QAAQ,EAAEE,WAAW,CAAC,GAAGhE,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAAC+C,OAAO,EAAEqB,UAAU,CAAC,GAAGpE,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACgF,KAAK,EAAEC,QAAQ,CAAC,GAAGjF,QAAQ,CAAC,CAAC,CAAC;EAErCC,SAAS,CAAC,MAAM;IACdwE,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3B,IAAIE,KAAK,EAAE;MACTT,YAAY,CAACS,KAAK,CAAC;IACrB,CAAC,MAAM;MACLvE,UAAU,CAACsE,gBAAgB,EAAEjE,WAAW,CAAC,CAACwE,IAAI,CAACnC,OAAO,IAAI;QACxDoB,YAAY,CAACpB,OAAO,CAAC;MACvB,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAAC6B,KAAK,CAAC,CAAC;;EAEX;EACA;EACA;EACA;EACA;EACA;;EAEI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACJ;EACA;;EAEA,oBACE5D,OAAA;IAAKmE,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBpE,OAAA;MAAKmE,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC3BpE,OAAA,CAACL,WAAW;QAAC0E,WAAW,EAAEtC,OAAO,GAAGA,OAAO,CAACC,IAAI,GAAG;MAAK;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC,eACNzE,OAAA;MAAKmE,SAAS,EAAC,UAAU;MAAAC,QAAA,eACvBpE,OAAA,CAACZ,QAAQ;QAACsF,aAAa,EAAEpB,UAAW;QAACqB,IAAI,EAAE7B,QAAS;QAAC8B,kBAAkB,EAAElC,UAAW;QAACmC,mBAAmB,EAAE3B;MAAY;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrH,CAAC,eACNzE,OAAA;MAAKmE,SAAS,EAAC,SAAS;MAAAC,QAAA,eACtBpE,OAAA,CAACb,YAAY;QAAC4E,WAAW,EAAEA,WAAY;QAACe,WAAW,EAAEzD;MAAiB;QAAAiD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACvE,EAAA,CAjIuBD,UAAU;EAAA,QAyEHL,SAAS,EACpBV,WAAW;AAAA;AAAA6F,EAAA,GA1EP9E,UAAU;AAAA,IAAA8E,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}