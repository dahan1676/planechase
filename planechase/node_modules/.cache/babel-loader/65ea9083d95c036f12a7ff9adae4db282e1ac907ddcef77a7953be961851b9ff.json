{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nconst dataSource = 'dhuber-cluster-0';\nconst database = 'planechase';\nconst sessionCollection = 'sessions';\nfunction getHeaders() {\n  const headers = new Headers();\n  headers.append('Content-Type', 'application/json');\n  headers.append('Accept', 'application/json');\n  headers.append('Access-Control-Request-Headers', '*');\n  headers.append('Access-Control-Allow-Origin', '*');\n  headers.append('api-key', 'kqhoHk09XphZcWMeBlGUOgDSXwvQDDkkn5mRXreTwyV6afivwZYiTnit6JSt7JyO');\n}\nexport async function getSession(sessionCode) {\n  //   curl --location 'https://us-east-1.aws.data.mongodb-api.com/app/data-napyt/endpoint/data/v1/action/findOne' \\\n  // --header 'Content-Type: application/json' \\\n  // --header 'Access-Control-Request-Headers: *' \\\n  // --header 'api-key: kqhoHk09XphZcWMeBlGUOgDSXwvQDDkkn5mRXreTwyV6afivwZYiTnit6JSt7JyO' \\\n  // --header 'Accept: application/json' \\\n  // --data '{\n  //       \"dataSource\": \"dhuber-cluster-0\",\n  //       \"database\": \"planechase\",\n  //       \"collection\": \"sessions\",\n  //       \"filter\": { \"_id\": \"ABCD\"  }\n  //   }'\n\n  console.log('setting up mongoDb');\n  if (sessionCode) {\n    return await getExistingSession(sessionCode);\n  }\n  return await getNewSession();\n}\nasync function getNewSession() {\n  const body = JSON.stringify({\n    'dataSource': dataSource,\n    'database': database,\n    'collection': sessionCollection\n  });\n  return await fetch('/planechaseSessions/makeSession/').then(response => response.json()).then(data => {\n    console.log(data[0]);\n    return {\n      session: data[0].pk,\n      plane: data[0].fields.plane,\n      rollCost: data[0].fields.rollCost\n    };\n  }).catch(error => console.log('error'));\n}\nasync function getExistingSession(sessionCode) {\n  const body = JSON.stringify({\n    'dataSource': dataSource,\n    'database': database,\n    'collection': sessionCollection,\n    'filter': {\n      '_id': 1\n    }\n  });\n  const requestOptions = {\n    method: 'POST',\n    headers: getHeaders(),\n    body: body,\n    mode: 'no-cors'\n  };\n\n  // fetch('https://us-east-1.aws.data.mongodb-api.com/app/data-napyt/endpoint/data/v1/action/findOne', requestOptions)\n  //   .then(response => response.json())\n  //   .then(data => sessionData = data)\n  //   .catch(error => console.error(error));\n  // console.log('session: ' + sessionData);\n\n  return await fetch(`/planechaseSessions/getSession/${sessionCode}`).then(response => response.json()).then(data => {\n    console.log(data[0]);\n    return {\n      session: data[0].pk,\n      plane: data[0].fields.plane,\n      rollCost: data[0].fields.rollCost\n    };\n  }).catch(error => console.log('error'));\n}\nexport async function setPlane(sessionCode, plane) {\n  const planeUrl = plane.split('/')[3].split('.')[0];\n  console.log('planeUrl: ' + planeUrl);\n  return await fetch(`/planechaseSessions/setPlane/${sessionCode}/${planeUrl}`).then(response => response.json()).catch(error => console.log('error'));\n}\nexport async function getAndSetNewPlane(sessionCode) {\n  return await fetch(`/planechaseSessions/getAndSetNewPlane/${sessionCode}`).then(response => response.json()).then(data => {\n    console.log(data[1]);\n    return data[1].fields;\n  }).catch(error => console.log('error'));\n}","map":{"version":3,"names":["React","useState","useEffect","dataSource","database","sessionCollection","getHeaders","headers","Headers","append","getSession","sessionCode","console","log","getExistingSession","getNewSession","body","JSON","stringify","fetch","then","response","json","data","session","pk","plane","fields","rollCost","catch","error","requestOptions","method","mode","setPlane","planeUrl","split","getAndSetNewPlane"],"sources":["/Users/danhuber/Desktop/development/planechase-new/planechase/src/tools/mongoApi.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\n\nconst dataSource = 'dhuber-cluster-0';\nconst database = 'planechase';\nconst sessionCollection = 'sessions';\n\nfunction getHeaders() {\n  const headers = new Headers();\n  headers.append('Content-Type', 'application/json');\n  headers.append('Accept', 'application/json');\n  headers.append('Access-Control-Request-Headers', '*');\n  headers.append('Access-Control-Allow-Origin', '*');\n  headers.append('api-key', 'kqhoHk09XphZcWMeBlGUOgDSXwvQDDkkn5mRXreTwyV6afivwZYiTnit6JSt7JyO');\n}\n\nexport async function getSession(sessionCode) {\n//   curl --location 'https://us-east-1.aws.data.mongodb-api.com/app/data-napyt/endpoint/data/v1/action/findOne' \\\n// --header 'Content-Type: application/json' \\\n// --header 'Access-Control-Request-Headers: *' \\\n// --header 'api-key: kqhoHk09XphZcWMeBlGUOgDSXwvQDDkkn5mRXreTwyV6afivwZYiTnit6JSt7JyO' \\\n// --header 'Accept: application/json' \\\n// --data '{\n//       \"dataSource\": \"dhuber-cluster-0\",\n//       \"database\": \"planechase\",\n//       \"collection\": \"sessions\",\n//       \"filter\": { \"_id\": \"ABCD\"  }\n//   }'\n\nconsole.log('setting up mongoDb');\n\nif (sessionCode) {\n  return await getExistingSession(sessionCode);\n} \n  \nreturn await getNewSession();\n}\n\nasync function getNewSession() {\n  const body = JSON.stringify({\n    'dataSource': dataSource,\n    'database': database,\n    'collection': sessionCollection\n  });\n\n  return await fetch('/planechaseSessions/makeSession/')\n    .then(response => response.json())\n    .then(data => {\n      console.log(data[0]);\n      return {\n        session: data[0].pk,\n        plane: data[0].fields.plane,\n        rollCost: data[0].fields.rollCost\n      };\n    })\n    .catch(error => console.log('error'));\n}\n\nasync function getExistingSession(sessionCode) {\n  const body = JSON.stringify({\n    'dataSource': dataSource,\n    'database': database,\n    'collection': sessionCollection,\n    'filter': { '_id': 1 }\n  });\n\n  const requestOptions = {\n    method: 'POST',\n    headers: getHeaders(),\n    body: body,\n    mode: 'no-cors'\n  }\n\n  // fetch('https://us-east-1.aws.data.mongodb-api.com/app/data-napyt/endpoint/data/v1/action/findOne', requestOptions)\n  //   .then(response => response.json())\n  //   .then(data => sessionData = data)\n  //   .catch(error => console.error(error));\n  // console.log('session: ' + sessionData);\n\n  return await fetch(`/planechaseSessions/getSession/${sessionCode}`)\n    .then(response => response.json())\n    .then(data => {\n      console.log(data[0]);\n      return {\n        session: data[0].pk,\n        plane: data[0].fields.plane,\n        rollCost: data[0].fields.rollCost\n      };\n    })\n    .catch(error => console.log('error'));\n}\n\nexport async function setPlane(sessionCode, plane) {\n  const planeUrl = plane.split('/')[3].split('.')[0];\n  console.log('planeUrl: ' + planeUrl);\n  return await fetch(`/planechaseSessions/setPlane/${sessionCode}/${planeUrl}`)\n    .then(response => response.json())\n    .catch(error => console.log('error'));\n}\n\nexport async function getAndSetNewPlane(sessionCode) {\n  return await fetch(`/planechaseSessions/getAndSetNewPlane/${sessionCode}`)\n    .then(response => response.json())\n    .then(data => {\n      console.log(data[1]);\n      return data[1].fields;\n    })\n    .catch(error => console.log('error'));\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}