{"ast":null,"code":"var _jsxFileName = \"/Users/danhuber/Desktop/development/planechase-new/planechase/src/planechase/Planechase.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PlaneDisplay from '../plane-display/PlaneDisplay.js';\nimport Controls from '../controls/Controls.js';\nimport { getSession, setPlaneById, setPlaneByName, getAllPlanes, setRollInfo } from \"../tools/mongoApi.js\";\nimport { dieOptions } from '../tools/consts.js';\nimport SessionCode from '../session-code/SessionCode.js';\nimport { useParams } from 'react-router-dom';\nimport { makeFullPlaneUrl, getMappedPlaneList } from '../tools/utils.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Planechase() {\n  _s();\n  function importAll(r, set) {\n    let images = {};\n    r.keys().forEach((item, index) => {\n      images[item.replace(`../img/planes/${set}`, '')] = r(item);\n    });\n    return images;\n  }\n  function shuffleDeck(deck) {\n    console.log('shuffleDeck');\n    for (var i = deck.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = deck[i];\n      deck[i] = deck[j];\n      deck[j] = temp;\n    }\n  }\n  function handlePlaneClick() {\n    console.log('handleClick');\n    const discardPile = shownPlanes;\n    const tempShuffledPlaneList = shuffledPlaneList;\n    discardPile.push(tempShuffledPlaneList.pop());\n    setShownPlanes(discardPile);\n    const newActivePlane = shownPlanes[shownPlanes.length - 1];\n    setActivePlane(newActivePlane);\n    console.log('activePlane: ' + newActivePlane);\n    setPlaneById(sessionCode, newActivePlane.id);\n  }\n  function makeDeckAndShownPlanes(planeList) {\n    console.log('making decks');\n    const planeImages = importAll(require.context('../img/planes', true, /\\.(png|jpe?g|svg)$/), 'mtg');\n    const mappedPlaneList = getMappedPlaneList(planeList, planeImages);\n    const shuffledDeck = mappedPlaneList;\n    const shownPlanes = [];\n    shuffleDeck(shuffledDeck);\n    shownPlanes.push(shuffledDeck.pop());\n    setShuffledPlaneList(shuffledDeck);\n    setShownPlanes(shownPlanes);\n    return {\n      shownPlanes: shownPlanes,\n      imageMap: planeImages\n    };\n  }\n  function handleRoll() {\n    console.log('handleRoll');\n    const randomIdx = Math.floor(Math.random() * dieOptions.length);\n    const newResult = dieOptions[randomIdx];\n    const newCost = cost + 1;\n    setCurrentResult(newResult);\n    setCost(newCost);\n    setRollInfo(sessionCode, newCost, newResult.name);\n  }\n  function handleReset() {\n    setCost(0);\n    setRollInfo(sessionCode, 0, 'Blank');\n  }\n  const {\n    sessionCode\n  } = useParams();\n  const [sets, setSets] = useState(['mtg', 'who']);\n  const [shuffledPlaneList, setShuffledPlaneList] = useState([]);\n  const [shownPlanes, setShownPlanes] = useState([]);\n  const [activePlane, setActivePlane] = useState(null);\n  const [currentResult, setCurrentResult] = useState(dieOptions[0]);\n  const [cost, setCost] = useState(0);\n  const [session, setSession] = useState(null);\n  useEffect(() => {\n    getAllPlanes().then(planeList => {\n      console.log('planeList: ' + planeList.length);\n      const planeObj = makeDeckAndShownPlanes(planeList);\n      // const activePlane = shownPlanes[shownPlanes.length - 1];\n\n      getSession(sessionCode, activePlane, planeObj.imageMap).then(session => {\n        setSession(session);\n        console.log(session);\n        setActivePlane(session.plane);\n      });\n    });\n  }, [sessionCode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"session-code\",\n      children: /*#__PURE__*/_jsxDEV(SessionCode, {\n        sessionCode: session ? session.session : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: /*#__PURE__*/_jsxDEV(Controls, {\n        currentResult: currentResult,\n        cost: cost,\n        handleRollFunction: handleRoll,\n        handleResetFunction: handleReset\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display\",\n      children: /*#__PURE__*/_jsxDEV(PlaneDisplay, {\n        activePlane: activePlane,\n        handleClick: handlePlaneClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_s(Planechase, \"Hzm+Mh0XtcRjyPIRD/5zaRVkheY=\", false, function () {\n  return [useParams];\n});\n_c = Planechase;\nvar _c;\n$RefreshReg$(_c, \"Planechase\");","map":{"version":3,"names":["React","useState","useEffect","PlaneDisplay","Controls","getSession","setPlaneById","setPlaneByName","getAllPlanes","setRollInfo","dieOptions","SessionCode","useParams","makeFullPlaneUrl","getMappedPlaneList","jsxDEV","_jsxDEV","Planechase","_s","importAll","r","set","images","keys","forEach","item","index","replace","shuffleDeck","deck","console","log","i","length","j","Math","floor","random","temp","handlePlaneClick","discardPile","shownPlanes","tempShuffledPlaneList","shuffledPlaneList","push","pop","setShownPlanes","newActivePlane","setActivePlane","sessionCode","id","makeDeckAndShownPlanes","planeList","planeImages","require","context","mappedPlaneList","shuffledDeck","setShuffledPlaneList","imageMap","handleRoll","randomIdx","newResult","newCost","cost","setCurrentResult","setCost","name","handleReset","sets","setSets","activePlane","currentResult","session","setSession","then","planeObj","plane","className","children","fileName","_jsxFileName","lineNumber","columnNumber","handleRollFunction","handleResetFunction","handleClick","_c","$RefreshReg$"],"sources":["/Users/danhuber/Desktop/development/planechase-new/planechase/src/planechase/Planechase.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport PlaneDisplay from '../plane-display/PlaneDisplay.js';\nimport Controls from '../controls/Controls.js';\nimport { getSession, setPlaneById, setPlaneByName, getAllPlanes, setRollInfo } from \"../tools/mongoApi.js\";\nimport { dieOptions } from '../tools/consts.js';\nimport SessionCode from '../session-code/SessionCode.js';\nimport { useParams } from 'react-router-dom';\nimport { makeFullPlaneUrl, getMappedPlaneList } from '../tools/utils.js';\n\nexport default function Planechase() {\n  function importAll(r, set) {\n    let images = {};\n    r.keys().forEach((item, index) => {\n      images[item.replace(`../img/planes/${set}`, '')] = r(item);\n    });\n    return images;\n  }\n\n  function shuffleDeck(deck) {\n    console.log('shuffleDeck');\n    for (var i = deck.length - 1; i > 0; i--) {\n      var j = Math.floor(Math.random() * (i + 1));\n      var temp = deck[i];\n      deck[i] = deck[j];\n      deck[j] = temp; \n    }\n  }\n\n  function handlePlaneClick() {\n    console.log('handleClick');\n    const discardPile = shownPlanes;\n    const tempShuffledPlaneList = shuffledPlaneList;\n    discardPile.push(tempShuffledPlaneList.pop());\n    setShownPlanes(discardPile);\n    const newActivePlane = shownPlanes[shownPlanes.length - 1]\n    setActivePlane(newActivePlane);\n    console.log('activePlane: ' + newActivePlane);\n    setPlaneById(sessionCode, newActivePlane.id);\n  }\n\n  function makeDeckAndShownPlanes(planeList) {\n    console.log('making decks');\n    const planeImages = importAll(\n      require.context('../img/planes', true, /\\.(png|jpe?g|svg)$/),\n      'mtg'\n    );\n\n    const mappedPlaneList = getMappedPlaneList(planeList, planeImages);\n    const shuffledDeck = mappedPlaneList;\n    const shownPlanes = [];\n\n    shuffleDeck(shuffledDeck);\n    shownPlanes.push(shuffledDeck.pop());\n    setShuffledPlaneList(shuffledDeck);\n    setShownPlanes(shownPlanes);\n    return {\n      shownPlanes: shownPlanes,\n      imageMap: planeImages\n    }\n  }\n\n  function handleRoll() {\n    console.log('handleRoll');\n    const randomIdx = Math.floor(Math.random() * dieOptions.length);\n    const newResult = dieOptions[randomIdx];\n    const newCost = cost + 1;\n\n    setCurrentResult(newResult);\n    setCost(newCost);\n    setRollInfo(sessionCode, newCost, newResult.name);\n  }\n\n  function handleReset() {\n    setCost(0);\n    setRollInfo(sessionCode, 0, 'Blank');\n  }\n\n  const { sessionCode } = useParams();\n  const [sets, setSets] = useState(['mtg', 'who']);\n  const [shuffledPlaneList, setShuffledPlaneList] = useState([]);\n  const [shownPlanes, setShownPlanes] = useState([]);\n  const [activePlane, setActivePlane] = useState(null);\n  const [currentResult, setCurrentResult] = useState(dieOptions[0]);\n  const [cost, setCost] = useState(0);\n  const [session, setSession] = useState(null);\n\n  useEffect(() => {\n    getAllPlanes().then(planeList => {\n      console.log('planeList: ' + planeList.length);\n      const planeObj = makeDeckAndShownPlanes(planeList);\n      // const activePlane = shownPlanes[shownPlanes.length - 1];\n      \n      getSession(sessionCode, activePlane, planeObj.imageMap).then(session => {\n        setSession(session);\n        console.log(session);\n        setActivePlane(session.plane);\n      });\n    });\n  }, [sessionCode]);\n\n  return (\n    <div className='container'>\n      <div className='session-code'>\n        <SessionCode sessionCode={session ? session.session : null}/>\n      </div>\n      <div className='controls'>\n        <Controls currentResult={currentResult} cost={cost} handleRollFunction={handleRoll} handleResetFunction={handleReset}/>\n      </div>\n      <div className='display'>\n        <PlaneDisplay activePlane={activePlane} handleClick={handlePlaneClick}/>\n      </div>\n    </div>\n  );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}